# Generated by Django 3.0.5 on 2020-06-11 20:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='板块id')),
                ('name', models.CharField(max_length=20, verbose_name='板块名称')),
                ('parent', models.SmallIntegerField(default=0, verbose_name='父板块')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='评论id')),
                ('discussion', models.CharField(max_length=1000, verbose_name='帖子内容')),
                ('time', models.DateField(auto_now_add=True, verbose_name='帖子发出时间')),
                ('floor_number', models.IntegerField(verbose_name='楼层号')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='文件id')),
                ('name', models.CharField(max_length=20, verbose_name='文件名')),
                ('address', models.CharField(max_length=80, verbose_name='文件地址')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='帖子id')),
                ('title', models.CharField(default='', max_length=30, verbose_name='帖子题目')),
                ('time', models.DateField(auto_now_add=True, verbose_name='发帖时间')),
                ('block', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Block')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('account', models.CharField(max_length=15, primary_key='true', serialize=False, verbose_name='账号')),
                ('password', models.CharField(max_length=256, verbose_name='密码')),
                ('email', models.EmailField(max_length=30, verbose_name='邮箱')),
                ('nickname', models.CharField(default='', max_length=10, verbose_name='昵称')),
                ('ProfilePicture', models.FilePathField(default='', max_length=80, verbose_name='ProfilePicture')),
                ('authority', models.IntegerField(default='1', verbose_name='权限')),
            ],
            options={
                'verbose_name': 'user info',
            },
        ),
        migrations.CreateModel(
            name='TopPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Post')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='话题id')),
                ('title', models.CharField(max_length=20, verbose_name='话题id')),
                ('block', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Block')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='回复id')),
                ('discussion', models.CharField(default='', max_length=1000, verbose_name='回复内容')),
                ('time', models.DateField(default='', verbose_name='回复发出时间')),
                ('floor_number', models.IntegerField(default=-1, verbose_name='楼层号')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='message.Comment', verbose_name='被回复的comment')),
                ('owner', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='initiator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='message.User'),
        ),
        migrations.AddField(
            model_name='post',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='message.Topic'),
        ),
        migrations.CreateModel(
            name='OpposeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Comment')),
                ('useraccount', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
            ],
        ),
        migrations.CreateModel(
            name='Oppose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Post')),
                ('useraccount', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
            ],
        ),
        migrations.CreateModel(
            name='LikeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Comment')),
                ('useraccount', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Post')),
                ('useraccount', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend1', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='friend1', to='message.User')),
                ('friend2', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='friend2', to='message.User')),
            ],
        ),
        migrations.CreateModel(
            name='ExcellentPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Post')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='message.User'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='message.Post'),
        ),
        migrations.CreateModel(
            name='CollectComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Comment')),
                ('useraccount', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
            ],
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.Post')),
                ('useraccount', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='message.User')),
            ],
        ),
    ]
